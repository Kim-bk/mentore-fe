{"ast":null,"code":"import { createPost } from '@/services/PostService.js';\nexport default {\n  props: ['togglePopup'],\n  data() {\n    return {\n      title: '',\n      content: '',\n      file: null,\n      errorM: ''\n    };\n  },\n  methods: {\n    handleSubmit(event) {\n      event.preventDefault();\n\n      // Here, you can perform the necessary logic to save the post to your backend or perform any other actions.\n      // For simplicity, we'll just log the post data to the console.\n      console.log('Post title:', this.title);\n      console.log('Post content:', this.content);\n\n      // Reset the form after submitting\n      this.title = '';\n      this.content = '';\n    },\n    onFileChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      if (!files.length) return;\n      this.file = files[0];\n      ;\n      console.log(this.file);\n    },\n    async createPost() {\n      const formData = new FormData();\n      formData.append('File', this.file);\n      formData.append('content', this.content);\n      formData.append('title', this.title);\n      console.log(formData);\n      createPost(formData).then(res => {\n        if (res.status === 200) {\n          console.log(res);\n          this.errorM = \"Tạo bài thành công!\";\n        }\n      }).catch(e => {\n        togglePopup();\n        console.log(e);\n      });\n    }\n  }\n};","map":{"version":3,"names":["createPost","props","data","title","content","file","errorM","methods","handleSubmit","event","preventDefault","console","log","onFileChange","e","files","target","dataTransfer","length","formData","FormData","append","then","res","status","catch","togglePopup"],"sources":["D:\\Capstone Project\\Vue\\mentore\\src\\components\\PopupPost.vue"],"sourcesContent":["<template>\r\n    <div class=\"post-form\">\r\n        <div class=\"popup\">\r\n            <div class=\"popup-inner\">\r\n            <h2 style=\"padding-left:250px; color: black;\">Tạo bài</h2>\r\n            <form @submit=\"handleSubmit\">\r\n                <div class=\"form-group\">\r\n                <label for=\"title\">Tiêu đề</label>\r\n                <input type=\"text\" id=\"title\" v-model=\"title\" required>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                <label for=\"content\">Nội dung</label>\r\n                <textarea id=\"content\" v-model=\"content\" rows=\"5\" required></textarea>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"content\">Chọn ảnh / video</label>\r\n                  <input id=\"image\" v-on:change=\"onFileChange\" type=\"file\">\r\n                </div>\r\n                <p style=\"font-weight:bold; color:green; font-size:18px;\"> {{errorM}} </p>\r\n                <button type=\"submit\" @click=\"createPost()\">Tạo</button>\r\n                <button class=\"btn-close\" @click=\"togglePopup()\" style=\"margin-left:506px; width:100px;\">Đóng</button>\r\n            </form>\r\n         </div>\r\n        </div>\r\n        \r\n      \r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import {createPost} from '@/services/PostService.js'\r\n\r\n  export default {\r\n    props:['togglePopup'],\r\n    data() {\r\n      return {\r\n        title: '',\r\n        content: '',\r\n        file: null,\r\n        errorM: '',\r\n      };\r\n    },\r\n    methods: {\r\n      handleSubmit(event) {\r\n        event.preventDefault();\r\n        \r\n        // Here, you can perform the necessary logic to save the post to your backend or perform any other actions.\r\n        // For simplicity, we'll just log the post data to the console.\r\n        console.log('Post title:', this.title);\r\n        console.log('Post content:', this.content);\r\n  \r\n        // Reset the form after submitting\r\n        this.title = '';\r\n        this.content = '';\r\n      },\r\n      onFileChange(e) {\r\n        var files = e.target.files || e.dataTransfer.files;\r\n        if (!files.length)\r\n          return;\r\n\r\n        this.file = files[0];;\r\n        console.log(this.file);\r\n      },\r\n      async createPost(){\r\n        const formData = new FormData();\r\n        formData.append('File', this.file);\r\n        formData.append('content', this.content);\r\n        formData.append('title', this.title);\r\n     \r\n        console.log(formData);\r\n        createPost(formData)\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tif (res.status === 200)\r\n\t\t\t\t\t{\r\n            console.log(res)\r\n            this.errorM = \"Tạo bài thành công!\"\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n        .catch(e => {\r\n            togglePopup()\r\n            console.log(e)\r\n            }\r\n          ); }\r\n      },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .post-form {\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .popup{\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 0;\r\n    z-index: 99;\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n    align-items:center;\r\n    justify-content: center;\r\n    display:flex;\r\n   \r\n  }\r\n  .popup-inner{\r\n    width: 700px;\r\n    background: white;\r\n    padding: 10px 10px 10px 10px;\r\n    border-radius: 5px 5px 5px 5px;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  label {\r\n    display: block;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  input[type=\"text\"],\r\n  textarea {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  button[type=\"submit\"] {\r\n    padding: 10px 20px;\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .btn-close{\r\n    padding: 10px 20px;\r\n    background-color: #ff0404;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  </style>\r\n  "],"mappings":"AA8BE,SAAQA,UAAU,QAAO,2BAA0B;AAEnD,eAAe;EACbC,KAAK,EAAC,CAAC,aAAa,CAAC;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE,IAAI;MACVC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAACC,KAAK,EAAE;MAClBA,KAAK,CAACC,cAAc,CAAC,CAAC;;MAEtB;MACA;MACAC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE,IAAI,CAACT,KAAK,CAAC;MACtCQ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAACR,OAAO,CAAC;;MAE1C;MACA,IAAI,CAACD,KAAI,GAAI,EAAE;MACf,IAAI,CAACC,OAAM,GAAI,EAAE;IACnB,CAAC;IACDS,YAAYA,CAACC,CAAC,EAAE;MACd,IAAIC,KAAI,GAAID,CAAC,CAACE,MAAM,CAACD,KAAI,IAAKD,CAAC,CAACG,YAAY,CAACF,KAAK;MAClD,IAAI,CAACA,KAAK,CAACG,MAAM,EACf;MAEF,IAAI,CAACb,IAAG,GAAIU,KAAK,CAAC,CAAC,CAAC;MAAC;MACrBJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,IAAI,CAAC;IACxB,CAAC;IACD,MAAML,UAAUA,CAAA,EAAE;MAChB,MAAMmB,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAAChB,IAAI,CAAC;MAClCc,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE,IAAI,CAACjB,OAAO,CAAC;MACxCe,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAAClB,KAAK,CAAC;MAEpCQ,OAAO,CAACC,GAAG,CAACO,QAAQ,CAAC;MACrBnB,UAAU,CAACmB,QAAQ,EACtBG,IAAI,CAACC,GAAE,IAAK;QACZ,IAAIA,GAAG,CAACC,MAAK,KAAM,GAAG,EACtB;UACOb,OAAO,CAACC,GAAG,CAACW,GAAG;UACf,IAAI,CAACjB,MAAK,GAAI,qBAAoB;QACzC;MACD,CAAC,EACImB,KAAK,CAACX,CAAA,IAAK;QACRY,WAAW,CAAC;QACZf,OAAO,CAACC,GAAG,CAACE,CAAC;MACb,CACF,CAAC;IAAE;EACP;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}