{"ast":null,"code":"import axios from 'axios';\nexport async function createPost(data) {\n  let config = {\n    header: {\n      'Content-Type': 'multipart/form-data',\n      'Authorization': 'Bearer ' + localStorage.getItem('accessToken')\n    },\n    maxBodyLength: 10000000,\n    maxContentLength: 10000000,\n    emulateJSON: true\n  };\n  const response = await axios.post('/api/post', data, config);\n  return response;\n}\nexport async function updatePost(data) {\n  const response = await axios.put(`/api/post`, data, {\n    headers: {\n      'Authorization': 'Bearer ' + localStorage.getItem('accessToken')\n    }\n  });\n  return response;\n}\nexport async function getUserPosts() {\n  const response = await axios.get('/api/post/user', {\n    headers: {\n      'Authorization': 'Bearer ' + localStorage.getItem('accessToken')\n    }\n  });\n  return response;\n}\nexport async function deletePost(id) {\n  const response = await axios.delete('/api/post/' + id, {\n    headers: {\n      'Authorization': 'Bearer ' + localStorage.getItem('accessToken')\n    }\n  });\n  return response;\n}\nexport async function getAllPost() {\n  const response = await axios.get('/api/post');\n  return response;\n}","map":{"version":3,"names":["axios","createPost","data","config","header","localStorage","getItem","maxBodyLength","maxContentLength","emulateJSON","response","post","updatePost","put","headers","getUserPosts","get","deletePost","id","delete","getAllPost"],"sources":["D:/Capstone Project/Vue/mentore/src/services/PostService.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport async function createPost(data) {\r\n    let config = {\r\n        header : {\r\n         'Content-Type' : 'multipart/form-data',\r\n         'Authorization': 'Bearer ' + localStorage.getItem('accessToken'),\r\n           },\r\n       maxBodyLength: 10000000,\r\n       maxContentLength: 10000000,\r\n       emulateJSON: true\r\n      }\r\n    const response = await axios.post('/api/post', data, config);\r\n    return response;\r\n}\r\n\r\nexport async function updatePost(data) {\r\n    const response = await axios.put(`/api/post`, data, {headers: { 'Authorization': 'Bearer ' + localStorage.getItem('accessToken') }});\r\n    return response;\r\n}\r\n\r\nexport async function getUserPosts() {\r\n    const response = await axios.get('/api/post/user', {headers: { 'Authorization': 'Bearer ' + localStorage.getItem('accessToken') }} );\r\n    return response;\r\n}\r\n\r\nexport async function deletePost(id) {\r\n    const response = await axios.delete('/api/post/'+id, {headers: { 'Authorization': 'Bearer ' + localStorage.getItem('accessToken') }} );\r\n    return response;\r\n}\r\n\r\nexport async function getAllPost() {\r\n    const response = await axios.get('/api/post');\r\n    return response;\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,eAAeC,UAAUA,CAACC,IAAI,EAAE;EACnC,IAAIC,MAAM,GAAG;IACTC,MAAM,EAAG;MACR,cAAc,EAAG,qBAAqB;MACtC,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa;IAC7D,CAAC;IACLC,aAAa,EAAE,QAAQ;IACvBC,gBAAgB,EAAE,QAAQ;IAC1BC,WAAW,EAAE;EACd,CAAC;EACH,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,WAAW,EAAET,IAAI,EAAEC,MAAM,CAAC;EAC5D,OAAOO,QAAQ;AACnB;AAEA,OAAO,eAAeE,UAAUA,CAACV,IAAI,EAAE;EACnC,MAAMQ,QAAQ,GAAG,MAAMV,KAAK,CAACa,GAAG,CAAE,WAAU,EAAEX,IAAI,EAAE;IAACY,OAAO,EAAE;MAAE,eAAe,EAAE,SAAS,GAAGT,YAAY,CAACC,OAAO,CAAC,aAAa;IAAE;EAAC,CAAC,CAAC;EACpI,OAAOI,QAAQ;AACnB;AAEA,OAAO,eAAeK,YAAYA,CAAA,EAAG;EACjC,MAAML,QAAQ,GAAG,MAAMV,KAAK,CAACgB,GAAG,CAAC,gBAAgB,EAAE;IAACF,OAAO,EAAE;MAAE,eAAe,EAAE,SAAS,GAAGT,YAAY,CAACC,OAAO,CAAC,aAAa;IAAE;EAAC,CAAE,CAAC;EACpI,OAAOI,QAAQ;AACnB;AAEA,OAAO,eAAeO,UAAUA,CAACC,EAAE,EAAE;EACjC,MAAMR,QAAQ,GAAG,MAAMV,KAAK,CAACmB,MAAM,CAAC,YAAY,GAACD,EAAE,EAAE;IAACJ,OAAO,EAAE;MAAE,eAAe,EAAE,SAAS,GAAGT,YAAY,CAACC,OAAO,CAAC,aAAa;IAAE;EAAC,CAAE,CAAC;EACtI,OAAOI,QAAQ;AACnB;AAEA,OAAO,eAAeU,UAAUA,CAAA,EAAG;EAC/B,MAAMV,QAAQ,GAAG,MAAMV,KAAK,CAACgB,GAAG,CAAC,WAAW,CAAC;EAC7C,OAAON,QAAQ;AACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}