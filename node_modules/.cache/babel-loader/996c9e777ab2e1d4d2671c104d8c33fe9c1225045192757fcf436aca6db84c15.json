{"ast":null,"code":"import axios from 'axios';\nexport async function createPost(data) {\n  const response = await axios.post('/api/post', data, {\n    headers: {\n      'Authorization': 'Bearer ' + localStorage.getItem('accessToken')\n    }\n  });\n  return response;\n}\nexport async function updatePost(data) {\n  const response = await axios.put(`/api/post`, data, {\n    headers: {\n      'Authorization': 'Bearer ' + localStorage.getItem('accessToken')\n    }\n  });\n  return response;\n}\nexport async function getUserPosts() {\n  const response = await axios.get('/api/post/user', {\n    headers: {\n      'Authorization': 'Bearer ' + localStorage.getItem('accessToken')\n    }\n  });\n  return response;\n}\nexport async function deletePost(id) {\n  const response = await axios.delete('/api/post/' + id, {\n    headers: {\n      'Authorization': 'Bearer ' + localStorage.getItem('accessToken')\n    }\n  });\n  return response;\n}\nexport async function getAllPost() {\n  const response = await axios.get('/api/post');\n  return response;\n}\nexport async function getPostById(id) {\n  const response = await axios.get('/api/post/' + id, {\n    headers: {\n      'Authorization': 'Bearer ' + localStorage.getItem('accessToken')\n    }\n  });\n  return response;\n}","map":{"version":3,"names":["axios","createPost","data","response","post","headers","localStorage","getItem","updatePost","put","getUserPosts","get","deletePost","id","delete","getAllPost","getPostById"],"sources":["D:/Capstone Project/Vue/mentore/src/services/PostService.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport async function createPost(data) {\r\n    const response = await axios.post('/api/post', data, {headers: { 'Authorization': 'Bearer ' + localStorage.getItem('accessToken') }});\r\n    return response;\r\n}\r\n\r\nexport async function updatePost(data) {\r\n    const response = await axios.put(`/api/post`, data, {headers: { 'Authorization': 'Bearer ' + localStorage.getItem('accessToken') }});\r\n    return response;\r\n}\r\n\r\nexport async function getUserPosts() {\r\n    const response = await axios.get('/api/post/user', {headers: { 'Authorization': 'Bearer ' + localStorage.getItem('accessToken') }} );\r\n    return response;\r\n}\r\n\r\nexport async function deletePost(id) {\r\n    const response = await axios.delete('/api/post/'+id, {headers: { 'Authorization': 'Bearer ' + localStorage.getItem('accessToken') }} );\r\n    return response;\r\n}\r\n\r\nexport async function getAllPost() {\r\n    const response = await axios.get('/api/post');\r\n    return response;\r\n}\r\n\r\nexport async function getPostById(id) {\r\n    const response = await axios.get('/api/post/'+id, {headers: { 'Authorization': 'Bearer ' + localStorage.getItem('accessToken') }});\r\n    return response;\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,eAAeC,UAAUA,CAACC,IAAI,EAAE;EACnC,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,WAAW,EAAEF,IAAI,EAAE;IAACG,OAAO,EAAE;MAAE,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa;IAAE;EAAC,CAAC,CAAC;EACrI,OAAOJ,QAAQ;AACnB;AAEA,OAAO,eAAeK,UAAUA,CAACN,IAAI,EAAE;EACnC,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACS,GAAG,CAAE,WAAU,EAAEP,IAAI,EAAE;IAACG,OAAO,EAAE;MAAE,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa;IAAE;EAAC,CAAC,CAAC;EACpI,OAAOJ,QAAQ;AACnB;AAEA,OAAO,eAAeO,YAAYA,CAAA,EAAG;EACjC,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACW,GAAG,CAAC,gBAAgB,EAAE;IAACN,OAAO,EAAE;MAAE,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa;IAAE;EAAC,CAAE,CAAC;EACpI,OAAOJ,QAAQ;AACnB;AAEA,OAAO,eAAeS,UAAUA,CAACC,EAAE,EAAE;EACjC,MAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACc,MAAM,CAAC,YAAY,GAACD,EAAE,EAAE;IAACR,OAAO,EAAE;MAAE,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa;IAAE;EAAC,CAAE,CAAC;EACtI,OAAOJ,QAAQ;AACnB;AAEA,OAAO,eAAeY,UAAUA,CAAA,EAAG;EAC/B,MAAMZ,QAAQ,GAAG,MAAMH,KAAK,CAACW,GAAG,CAAC,WAAW,CAAC;EAC7C,OAAOR,QAAQ;AACnB;AAEA,OAAO,eAAea,WAAWA,CAACH,EAAE,EAAE;EAClC,MAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACW,GAAG,CAAC,YAAY,GAACE,EAAE,EAAE;IAACR,OAAO,EAAE;MAAE,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa;IAAE;EAAC,CAAC,CAAC;EAClI,OAAOJ,QAAQ;AACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}