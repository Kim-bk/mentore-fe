{"ast":null,"code":"import { createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"top\": \"110px\",\n    \"left\": \"80px\",\n    \"position\": \"fixed\",\n    \"width\": \"70vw\",\n    \"height\": \"20vh\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode($setup[\"HeaderBar\"]), _createElementVNode(\"div\", _hoisted_1, [_createVNode($setup[\"FullCalendar\"], {\n    options: $setup.options\n  }, null, 8 /* PROPS */, [\"options\"])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["style","_createVNode","$setup","_createElementVNode","_hoisted_1","options"],"sources":["D:\\Capstone Project\\Vue\\mentore\\src\\views\\CalendarView.vue"],"sourcesContent":["<template>\r\n    <header-bar></header-bar>\r\n    <div style=\"top:110px; left: 80px; position: fixed;\r\n    width: 70vw; height: 20vh\">\r\n        <FullCalendar v-bind:options=\"options\"></FullCalendar>\r\n    </div>\r\n    \r\n</template>\r\n\r\n<script setup>\r\nimport {reactive, ref} from 'vue'\r\nimport FullCalendar from '@fullcalendar/vue3'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport listPlugin from '@fullcalendar/list'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport useEvents from '@/composables/useEvent.js'\r\n\r\nconst id = ref(10)\r\n\r\nconst {getEvents, createEvent, updateEvent, deleteEvent} = useEvents()\r\n\r\nconst options = reactive({\r\n    plugins: [dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin],\r\n    initialView: 'dayGridMonth',\r\n    headerToolbar:{\r\n        left:'prev,next today',\r\n        center:'title',\r\n        right:'dayGridMonth,dayGridWeek,listDay'\r\n    },\r\n    editable:true,\r\n    selectable:true,\r\n    weekends:true,\r\n    select:(arg) =>{\r\n        id.value = id.value + 1\r\n        const cal = arg.view.calendar\r\n        cal.unselect()\r\n        cal.addEvent({\r\n            id: id.value.toString(),\r\n            title: \"New event\" + id.value.toString(),\r\n            start: arg.start,\r\n            end: arg.end,\r\n            allDay: true\r\n        })\r\n    },\r\n    eventClick: (arg) => {\r\n        if (arg.event){\r\n            arg.event.remove()\r\n        }\r\n    },\r\n    events:[],\r\n    eventAdd:(arg) =>{\r\n        // createEvent({\r\n        //     id: arg.event.id,\r\n        //     title: arg.event.title,\r\n        //     start: arg.event.start,\r\n        //     end: arg.event.end,\r\n        //     allDay: arg.event.allDay\r\n        // })\r\n    },\r\n    eventChange:(arg) =>{\r\n        // updateEvent({\r\n        //     id: arg.event.id,\r\n        //     title: arg.event.title,\r\n        //     start: arg.event.start,\r\n        //     end: arg.event.end,\r\n        //     allDay: arg.event.allDay\r\n        // })\r\n    },\r\n    eventRemove:(arg) =>{\r\n        //deleteEvent(arg.event.id)\r\n    },\r\n});\r\n\r\noptions.events = getEvents.value\r\n\r\nimport HeaderBar from '@/components/HeaderBar.vue';\r\ncomponents :{\r\n\t\tHeaderBar: HeaderBar\r\n\t};\r\n</script>\r\n\r\n\r\n"],"mappings":";;EAESA,KACqB,EADrB;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;AACqB;;6DAF1BC,YAAA,CAAyBC,MAAA,gBACzBC,mBAAA,CAGM,OAHNC,UAGM,GADFH,YAAA,CAAsDC,MAAA;IAAjCG,OAAO,EAAEH,MAAA,CAAAG;EAAO,qC"},"metadata":{},"sourceType":"module","externalDependencies":[]}