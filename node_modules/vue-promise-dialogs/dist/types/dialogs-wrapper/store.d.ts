import { Ref } from 'vue-demi';
import { Component } from '../types';
export declare const wrapperExists: Ref<boolean>;
interface DialogData<P, R> {
    component: Component;
    params: P;
    promiseResolve: (value: R) => void;
    promiseReject: (error: unknown) => void;
    unmountDelay?: number;
}
export declare const dialogsData: Ref<Record<symbol, DialogData<any, any>>>;
export declare function add<P, R>(component: Component, params: P, unmountDelay?: number): Promise<R>;
export declare function resolveDialog(id: symbol, result: unknown, unmountDelay?: number): void;
export declare function rejectDialog(id: symbol, error: unknown, unmountDelay?: number): void;
export {};
